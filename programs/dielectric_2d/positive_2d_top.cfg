 ##############################################
 ###          Configuration file            ###
 ##############################################

 cylindrical = .false.
 use_dielectric = .true.
 dielectric_type = top
 prolong_density = limit

 [dielectric]
    # Secondary electron emission coefficient for positive ion impact:
    gamma_se_ion =  1.0000E-01

    # Secondary electron emission coefficient for photons:
    gamma_se_ph =  4.0000E-01

    # Maximum travel distance for testing boundary intersection:
    photon_step_length =  1.0000E-03
    
 # The desired endtime in seconds of the simulation:
 end_time = 25.0e-9

 # The name of the simulation:
 output%name = output/positive_2d/left/ph0.4_ion0.1/ph0.4_ion0.1_

 # The number of grid cells per coordinate in a box:
 box_size = 8

 # The length of the (square) domain:
 domain_len = 20e-3 20e-3

 gas%components = N2 O2
 gas%fractions = 0.8 0.2

 # The gas pressure in bar (used for photoionization):
 gas%pressure = 0.1000E+01

 # The applied electric field:
 field_amplitude = 0.3E+07

 # The background ion and electron density in 1/m^3:
 background_density = 1.0000E+14

 # Initial density of the seed:
 seed_density = 0.5000E+19

 # Type of seed: neutral (0), ions (1) or electrons (-1)
 seed_charge_type = 0

 # The relative start position of the initial seed:
 seed_rel_r0 = 0.500E+00 0.6E+00

 # The relative end position of the initial seed:
 seed_rel_r1 = 0.500E+00 0.5E+00

 # Seed width:
 seed_width = 2.000E-04

 # Fallof type for seed, see m_geom.f90:
 seed_falloff = smoothstep

 # The timestep for writing output:
 output%dt = 0.2500E-09

 # The maximum timestep:
 dt_max = 1e-11

 table_data%max_townsend=1242.58527

 [photoi]
        # Whether photoionization is enabled:
        enabled = t
        method = montecarlo

 [photoi_mc]
        absorp_fac = 1e-10

 [input_data]
    # Input file with transport (and reaction) data:
    file = '../../transport_data/td_air_siglo_swarm.txt'

    # List of ion mobilities (m^2/Vs):
    ion_mobilities =  4.0000E-04

    # List of ions that are considered mobile:
    mobile_ions = 'M_plus'

    # Use old style transport data (alpha, eta, mu, D vs V/m):
    old_style = T
